# Nginx configuration for GhostChain load balancing
events {
    worker_connections 1024;
}

http {
    upstream ghostchain_rpc {
        least_conn;
        server ghostchain-node:8545;
        server ghostchain-validator-1:8545 backup;
        server ghostchain-validator-2:8545 backup;
    }
    
    upstream ghostchain_p2p {
        least_conn;
        server ghostchain-node:7777;
        server ghostchain-validator-1:7777;
        server ghostchain-validator-2:7777;
    }
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=rpc_limit:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=general_limit:10m rate=100r/s;
    
    # Logging
    log_format ghostchain '$remote_addr - $remote_user [$time_local] '
                         '"$request" $status $body_bytes_sent '
                         '"$http_referer" "$http_user_agent" '
                         'rt=$request_time uct="$upstream_connect_time" '
                         'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/ghostchain.access.log ghostchain;
    error_log /var/log/nginx/ghostchain.error.log;
    
    # RPC endpoint (HTTP/HTTPS)
    server {
        listen 80;
        listen 443 ssl http2;
        server_name ghostchain.local;
        
        # SSL configuration
        ssl_certificate /etc/nginx/certs/ghostchain.crt;
        ssl_certificate_key /etc/nginx/certs/ghostchain.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        
        # CORS headers for blockchain RPC
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
        add_header Access-Control-Expose-Headers "Content-Length,Content-Range" always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type "text/plain; charset=utf-8";
            add_header Content-Length 0;
            return 204;
        }
        
        # Health check endpoint
        location /health {
            limit_req zone=general_limit burst=20 nodelay;
            proxy_pass http://ghostchain_rpc/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Health check specific settings
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
        }
        
        # Main RPC endpoint
        location / {
            limit_req zone=rpc_limit burst=50 nodelay;
            proxy_pass http://ghostchain_rpc;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
        }
        
        # WebSocket support for real-time updates
        location /ws {
            proxy_pass http://ghostchain_rpc;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket specific timeouts
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
        }
        
        # Static content for blockchain explorer (if needed)
        location /static/ {
            alias /var/www/ghostchain/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        # Metrics endpoint (restricted access)
        location /metrics {
            allow 172.20.0.0/16;  # Docker network
            allow 127.0.0.1;      # Localhost
            deny all;
            
            proxy_pass http://ghostchain_rpc/metrics;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
    }
    
    # P2P endpoint (TCP proxy)
    # Note: This requires nginx stream module
}

# TCP/UDP load balancing for P2P connections
stream {
    upstream ghostchain_p2p_stream {
        least_conn;
        server ghostchain-node:7777;
        server ghostchain-validator-1:7777;
        server ghostchain-validator-2:7777;
    }
    
    server {
        listen 7777;
        proxy_pass ghostchain_p2p_stream;
        proxy_timeout 1s;
        proxy_responses 1;
        error_log /var/log/nginx/ghostchain.p2p.error.log;
    }
}